
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000003e6  0000045a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000490  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001265  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a2c  00000000  00000000  00001835  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007dc  00000000  00000000  00002261  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000020c  00000000  00000000  00002a40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000550  00000000  00000000  00002c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008ae  00000000  00000000  0000319c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00003a4a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
   8:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
   c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  28:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  2c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  34:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  40:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  48:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  54:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  58:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  5c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  60:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  64:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  68:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  6c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  70:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d4 e0       	ldi	r29, 0x04	; 4
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	11 e0       	ldi	r17, 0x01	; 1
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b1 e0       	ldi	r27, 0x01	; 1
  86:	e6 ee       	ldi	r30, 0xE6	; 230
  88:	f3 e0       	ldi	r31, 0x03	; 3
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a6 30       	cpi	r26, 0x06	; 6
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>
  96:	0e 94 bb 01 	call	0x376	; 0x376 <main>
  9a:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <_exit>

0000009e <__bad_interrupt>:
  9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <DIO_SetPinDir>:

		break;

	case DIO_PORTD :

		PORTD = Val;
  a2:	44 23       	and	r20, r20
  a4:	b9 f1       	breq	.+110    	; 0x114 <DIO_SetPinDir+0x72>
  a6:	41 30       	cpi	r20, 0x01	; 1
  a8:	09 f0       	breq	.+2      	; 0xac <DIO_SetPinDir+0xa>
  aa:	6b c0       	rjmp	.+214    	; 0x182 <DIO_SetPinDir+0xe0>
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	89 f0       	breq	.+34     	; 0xd2 <DIO_SetPinDir+0x30>
  b0:	28 f0       	brcs	.+10     	; 0xbc <DIO_SetPinDir+0x1a>
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	c9 f0       	breq	.+50     	; 0xe8 <DIO_SetPinDir+0x46>
  b6:	83 30       	cpi	r24, 0x03	; 3
  b8:	11 f1       	breq	.+68     	; 0xfe <DIO_SetPinDir+0x5c>
  ba:	08 95       	ret
  bc:	2a b3       	in	r18, 0x1a	; 26
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_SetPinDir+0x26>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_SetPinDir+0x22>
  cc:	82 2b       	or	r24, r18
  ce:	8a bb       	out	0x1a, r24	; 26
  d0:	08 95       	ret
  d2:	27 b3       	in	r18, 0x17	; 23
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_SetPinDir+0x3c>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_SetPinDir+0x38>
  e2:	82 2b       	or	r24, r18
  e4:	87 bb       	out	0x17, r24	; 23
  e6:	08 95       	ret
  e8:	24 b3       	in	r18, 0x14	; 20
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <DIO_SetPinDir+0x52>
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <DIO_SetPinDir+0x4e>
  f8:	82 2b       	or	r24, r18
  fa:	84 bb       	out	0x14, r24	; 20
  fc:	08 95       	ret
  fe:	21 b3       	in	r18, 0x11	; 17
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDir+0x68>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDir+0x64>
 10e:	82 2b       	or	r24, r18
 110:	81 bb       	out	0x11, r24	; 17
 112:	08 95       	ret
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	91 f0       	breq	.+36     	; 0x13c <DIO_SetPinDir+0x9a>
 118:	28 f0       	brcs	.+10     	; 0x124 <DIO_SetPinDir+0x82>
 11a:	82 30       	cpi	r24, 0x02	; 2
 11c:	d9 f0       	breq	.+54     	; 0x154 <DIO_SetPinDir+0xb2>
 11e:	83 30       	cpi	r24, 0x03	; 3
 120:	29 f1       	breq	.+74     	; 0x16c <DIO_SetPinDir+0xca>
 122:	08 95       	ret
 124:	2a b3       	in	r18, 0x1a	; 26
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_SetPinDir+0x8e>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_SetPinDir+0x8a>
 134:	80 95       	com	r24
 136:	82 23       	and	r24, r18
 138:	8a bb       	out	0x1a, r24	; 26
 13a:	08 95       	ret
 13c:	27 b3       	in	r18, 0x17	; 23
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_SetPinDir+0xa6>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	6a 95       	dec	r22
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_SetPinDir+0xa2>
 14c:	80 95       	com	r24
 14e:	82 23       	and	r24, r18
 150:	87 bb       	out	0x17, r24	; 23
 152:	08 95       	ret
 154:	24 b3       	in	r18, 0x14	; 20
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_SetPinDir+0xbe>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_SetPinDir+0xba>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	84 bb       	out	0x14, r24	; 20
 16a:	08 95       	ret
 16c:	21 b3       	in	r18, 0x11	; 17
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_SetPinDir+0xd6>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_SetPinDir+0xd2>
 17c:	80 95       	com	r24
 17e:	82 23       	and	r24, r18
 180:	81 bb       	out	0x11, r24	; 17
 182:	08 95       	ret

00000184 <DIO_WritePin>:



void DIO_WritePin(uint8 Port ,uint8 Pin, uint8 Val)
{
	switch (Val)
 184:	44 23       	and	r20, r20
 186:	b9 f1       	breq	.+110    	; 0x1f6 <DIO_WritePin+0x72>
 188:	41 30       	cpi	r20, 0x01	; 1
 18a:	09 f0       	breq	.+2      	; 0x18e <DIO_WritePin+0xa>
 18c:	6b c0       	rjmp	.+214    	; 0x264 <DIO_WritePin+0xe0>


	case DIO_PIN_HIGH :


		switch (Port)
 18e:	81 30       	cpi	r24, 0x01	; 1
 190:	89 f0       	breq	.+34     	; 0x1b4 <DIO_WritePin+0x30>
 192:	28 f0       	brcs	.+10     	; 0x19e <DIO_WritePin+0x1a>
 194:	82 30       	cpi	r24, 0x02	; 2
 196:	c9 f0       	breq	.+50     	; 0x1ca <DIO_WritePin+0x46>
 198:	83 30       	cpi	r24, 0x03	; 3
 19a:	11 f1       	breq	.+68     	; 0x1e0 <DIO_WritePin+0x5c>
 19c:	08 95       	ret
		{
		case DIO_PORTA :

			SET_BIT(PORTA,Pin);
 19e:	2b b3       	in	r18, 0x1b	; 27
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_WritePin+0x26>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_WritePin+0x22>
 1ae:	82 2b       	or	r24, r18
 1b0:	8b bb       	out	0x1b, r24	; 27

			break;
 1b2:	08 95       	ret

		case DIO_PORTB :

			SET_BIT(PORTB,Pin);
 1b4:	28 b3       	in	r18, 0x18	; 24
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_WritePin+0x3c>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6a 95       	dec	r22
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_WritePin+0x38>
 1c4:	82 2b       	or	r24, r18
 1c6:	88 bb       	out	0x18, r24	; 24

			break;
 1c8:	08 95       	ret

		case DIO_PORTC :

			SET_BIT(PORTC,Pin);
 1ca:	25 b3       	in	r18, 0x15	; 21
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_WritePin+0x52>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_WritePin+0x4e>
 1da:	82 2b       	or	r24, r18
 1dc:	85 bb       	out	0x15, r24	; 21

			break;
 1de:	08 95       	ret

		case DIO_PORTD :

			SET_BIT(PORTD,Pin);
 1e0:	22 b3       	in	r18, 0x12	; 18
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_WritePin+0x68>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_WritePin+0x64>
 1f0:	82 2b       	or	r24, r18
 1f2:	82 bb       	out	0x12, r24	; 18

			break;
 1f4:	08 95       	ret
		break;

		case DIO_PIN_LOW :


			switch (Port)
 1f6:	81 30       	cpi	r24, 0x01	; 1
 1f8:	91 f0       	breq	.+36     	; 0x21e <DIO_WritePin+0x9a>
 1fa:	28 f0       	brcs	.+10     	; 0x206 <DIO_WritePin+0x82>
 1fc:	82 30       	cpi	r24, 0x02	; 2
 1fe:	d9 f0       	breq	.+54     	; 0x236 <DIO_WritePin+0xb2>
 200:	83 30       	cpi	r24, 0x03	; 3
 202:	29 f1       	breq	.+74     	; 0x24e <DIO_WritePin+0xca>
 204:	08 95       	ret
			{
			case DIO_PORTA :

				CLR_BIT(PORTA,Pin);
 206:	2b b3       	in	r18, 0x1b	; 27
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_WritePin+0x8e>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_WritePin+0x8a>
 216:	80 95       	com	r24
 218:	82 23       	and	r24, r18
 21a:	8b bb       	out	0x1b, r24	; 27

				break;
 21c:	08 95       	ret

			case DIO_PORTB :

				CLR_BIT(PORTB,Pin);
 21e:	28 b3       	in	r18, 0x18	; 24
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <DIO_WritePin+0xa6>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	6a 95       	dec	r22
 22c:	e2 f7       	brpl	.-8      	; 0x226 <DIO_WritePin+0xa2>
 22e:	80 95       	com	r24
 230:	82 23       	and	r24, r18
 232:	88 bb       	out	0x18, r24	; 24

				break;
 234:	08 95       	ret

			case DIO_PORTC :

				CLR_BIT(PORTC,Pin);
 236:	25 b3       	in	r18, 0x15	; 21
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_WritePin+0xbe>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_WritePin+0xba>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	85 bb       	out	0x15, r24	; 21

				break;
 24c:	08 95       	ret

			case DIO_PORTD :

				CLR_BIT(PORTD,Pin);
 24e:	22 b3       	in	r18, 0x12	; 18
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <DIO_WritePin+0xd6>
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <DIO_WritePin+0xd2>
 25e:	80 95       	com	r24
 260:	82 23       	and	r24, r18
 262:	82 bb       	out	0x12, r24	; 18
 264:	08 95       	ret

00000266 <LCD_WriteCommand>:
#endif
	
}

void LCD_WriteCommand(uint8 cmd)
{
 266:	cf 93       	push	r28
 268:	c8 2f       	mov	r28, r24
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_RS_PIN, DIO_PIN_LOW);
 26a:	40 e0       	ldi	r20, 0x00	; 0
 26c:	61 e0       	ldi	r22, 0x01	; 1
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_RW_PIN, DIO_PIN_LOW);
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	62 e0       	ldi	r22, 0x02	; 2
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_E_PIN, DIO_PIN_LOW);
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	63 e0       	ldi	r22, 0x03	; 3
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
	
	PORTA = (cmd & 0xF0) | (PORTA & 0x0F);
 288:	9b b3       	in	r25, 0x1b	; 27
 28a:	8c 2f       	mov	r24, r28
 28c:	80 7f       	andi	r24, 0xF0	; 240
 28e:	9f 70       	andi	r25, 0x0F	; 15
 290:	98 2b       	or	r25, r24
 292:	9b bb       	out	0x1b, r25	; 27
	
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_E_PIN, DIO_PIN_HIGH);
 294:	41 e0       	ldi	r20, 0x01	; 1
 296:	63 e0       	ldi	r22, 0x03	; 3
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29e:	8f e9       	ldi	r24, 0x9F	; 159
 2a0:	9f e0       	ldi	r25, 0x0F	; 15
 2a2:	01 97       	sbiw	r24, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCD_WriteCommand+0x3c>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCD_WriteCommand+0x42>
 2a8:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_E_PIN, DIO_PIN_LOW);
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	63 e0       	ldi	r22, 0x03	; 3
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
	
	PORTA = (cmd << 4) | (PORTA & 0x0F);
 2b4:	9b b3       	in	r25, 0x1b	; 27
 2b6:	8c 2f       	mov	r24, r28
 2b8:	82 95       	swap	r24
 2ba:	80 7f       	andi	r24, 0xF0	; 240
 2bc:	9f 70       	andi	r25, 0x0F	; 15
 2be:	89 2b       	or	r24, r25
 2c0:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_E_PIN, DIO_PIN_HIGH);
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	63 e0       	ldi	r22, 0x03	; 3
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
 2cc:	8f e9       	ldi	r24, 0x9F	; 159
 2ce:	9f e0       	ldi	r25, 0x0F	; 15
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <LCD_WriteCommand+0x6a>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <LCD_WriteCommand+0x70>
 2d6:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(LCD_4BIT_CMD_PORT ,LCD_E_PIN, DIO_PIN_LOW);
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	63 e0       	ldi	r22, 0x03	; 3
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_WritePin>
 2e2:	8f e1       	ldi	r24, 0x1F	; 31
 2e4:	9e e4       	ldi	r25, 0x4E	; 78
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <LCD_WriteCommand+0x80>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <LCD_WriteCommand+0x86>
 2ec:	00 00       	nop
	
	_delay_ms(5);
	
}
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <LCD_Init>:
	
	_delay_ms(5);
	
	#elif LCD_MODE == 4
	
		DIO_SetPinDir(LCD_4BIT_CMD_PORT ,LCD_RS_PIN , DIO_PIN_OUTPUT);
 2f2:	41 e0       	ldi	r20, 0x01	; 1
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_CMD_PORT ,LCD_RW_PIN , DIO_PIN_OUTPUT);
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	62 e0       	ldi	r22, 0x02	; 2
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_CMD_PORT ,LCD_E_PIN , DIO_PIN_OUTPUT);
 306:	41 e0       	ldi	r20, 0x01	; 1
 308:	63 e0       	ldi	r22, 0x03	; 3
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
		
		DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D4 , DIO_PIN_OUTPUT);
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	64 e0       	ldi	r22, 0x04	; 4
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D5 , DIO_PIN_OUTPUT);
 31a:	41 e0       	ldi	r20, 0x01	; 1
 31c:	65 e0       	ldi	r22, 0x05	; 5
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D6 , DIO_PIN_OUTPUT);
 324:	41 e0       	ldi	r20, 0x01	; 1
 326:	66 e0       	ldi	r22, 0x06	; 6
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
		DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D7 , DIO_PIN_OUTPUT);
 32e:	41 e0       	ldi	r20, 0x01	; 1
 330:	67 e0       	ldi	r22, 0x07	; 7
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
 338:	2f ef       	ldi	r18, 0xFF	; 255
 33a:	81 ee       	ldi	r24, 0xE1	; 225
 33c:	94 e0       	ldi	r25, 0x04	; 4
 33e:	21 50       	subi	r18, 0x01	; 1
 340:	80 40       	sbci	r24, 0x00	; 0
 342:	90 40       	sbci	r25, 0x00	; 0
 344:	e1 f7       	brne	.-8      	; 0x33e <LCD_Init+0x4c>
 346:	00 c0       	rjmp	.+0      	; 0x348 <LCD_Init+0x56>
 348:	00 00       	nop
		
		_delay_ms(100);
		
		LCD_WriteCommand(0x33);
 34a:	83 e3       	ldi	r24, 0x33	; 51
 34c:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
		LCD_WriteCommand(0x32);
 350:	82 e3       	ldi	r24, 0x32	; 50
 352:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
		LCD_WriteCommand(0x28);
 356:	88 e2       	ldi	r24, 0x28	; 40
 358:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
		LCD_WriteCommand(0x0C);
 35c:	8c e0       	ldi	r24, 0x0C	; 12
 35e:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
        LCD_WriteCommand(0x01);
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
		LCD_WriteCommand(0x06);
 368:	86 e0       	ldi	r24, 0x06	; 6
 36a:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
		LCD_WriteCommand(0x02);
 36e:	82 e0       	ldi	r24, 0x02	; 2
 370:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteCommand>
 374:	08 95       	ret

00000376 <main>:
#include "UART.h"
#include "LCD.h"

int main(void)
{
    UART_Init();
 376:	0e 94 c4 01 	call	0x388	; 0x388 <UART_Init>
	UART_SendString("HELLO");
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <UART_SendString>
	LCD_Init();
 382:	0e 94 79 01 	call	0x2f2	; 0x2f2 <LCD_Init>
 386:	ff cf       	rjmp	.-2      	; 0x386 <main+0x10>

00000388 <UART_Init>:
#include "UART.h"

void UART_Init (void) 
{
	uint32 BR_Value = 0 ;
	DIO_SetPinDir(DIO_PORTD,DIO_PIN0,DIO_PIN_INPUT);
 388:	40 e0       	ldi	r20, 0x00	; 0
 38a:	60 e0       	ldi	r22, 0x00	; 0
 38c:	83 e0       	ldi	r24, 0x03	; 3
 38e:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTD,DIO_PIN1,DIO_PIN_OUTPUT);
 392:	41 e0       	ldi	r20, 0x01	; 1
 394:	61 e0       	ldi	r22, 0x01	; 1
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	0e 94 51 00 	call	0xa2	; 0xa2 <DIO_SetPinDir>
	UCSRB |= 0x18 ;
 39c:	8a b1       	in	r24, 0x0a	; 10
 39e:	88 61       	ori	r24, 0x18	; 24
 3a0:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= 0x86 ;
 3a2:	80 b5       	in	r24, 0x20	; 32
 3a4:	86 68       	ori	r24, 0x86	; 134
 3a6:	80 bd       	out	0x20, r24	; 32
	BR_Value = ((160000)/(96 * 16)) -1 ;
	UBRRL = BR_Value ;
 3a8:	87 e6       	ldi	r24, 0x67	; 103
 3aa:	89 b9       	out	0x09, r24	; 9
 3ac:	08 95       	ret

000003ae <UART_SendByte>:
}

void UART_SendByte (uint8 byte) 
{
	while(GET_BIT(UCSRA,5) == 0);
 3ae:	5d 9b       	sbis	0x0b, 5	; 11
 3b0:	fe cf       	rjmp	.-4      	; 0x3ae <UART_SendByte>
	UDR = byte ;
 3b2:	8c b9       	out	0x0c, r24	; 12
 3b4:	08 95       	ret

000003b6 <UART_SendString>:
}

void UART_SendString (uint8* str) 
{
 3b6:	0f 93       	push	r16
 3b8:	1f 93       	push	r17
 3ba:	cf 93       	push	r28
 3bc:	fc 01       	movw	r30, r24
	uint8 coun = 0 ;
	while(str[coun] != '\0')
 3be:	80 81       	ld	r24, Z
 3c0:	88 23       	and	r24, r24
 3c2:	59 f0       	breq	.+22     	; 0x3da <UART_SendString+0x24>
 3c4:	8f 01       	movw	r16, r30
 3c6:	c0 e0       	ldi	r28, 0x00	; 0
	{
		UART_SendByte (str[coun]);
 3c8:	0e 94 d7 01 	call	0x3ae	; 0x3ae <UART_SendByte>
		coun ++;
 3cc:	cf 5f       	subi	r28, 0xFF	; 255
}

void UART_SendString (uint8* str) 
{
	uint8 coun = 0 ;
	while(str[coun] != '\0')
 3ce:	f8 01       	movw	r30, r16
 3d0:	ec 0f       	add	r30, r28
 3d2:	f1 1d       	adc	r31, r1
 3d4:	80 81       	ld	r24, Z
 3d6:	81 11       	cpse	r24, r1
 3d8:	f7 cf       	rjmp	.-18     	; 0x3c8 <UART_SendString+0x12>
	{
		UART_SendByte (str[coun]);
		coun ++;
	}
}
 3da:	cf 91       	pop	r28
 3dc:	1f 91       	pop	r17
 3de:	0f 91       	pop	r16
 3e0:	08 95       	ret

000003e2 <_exit>:
 3e2:	f8 94       	cli

000003e4 <__stop_program>:
 3e4:	ff cf       	rjmp	.-2      	; 0x3e4 <__stop_program>
